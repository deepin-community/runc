From 6f7266c3f7848a3a86886451bec141442f825858 Mon Sep 17 00:00:00 2001
From: Bjorn Neergaard <bjorn.neergaard@docker.com>
Date: Wed, 11 Oct 2023 10:16:04 -0600
Subject: [PATCH] libcontainer: drop system.Setxid

Since Go 1.16, [Go issue 1435][1] is solved, and the stdlib syscall
implementations work on Linux. While they are a bit more
flexible/heavier-weight than the implementations that were copied to
libcontainer/system (working across all threads), we compile with Cgo,
and using the libc wrappers should be just as suitable.

  [1]: https://github.com/golang/go/issues/1435

Signed-off-by: Bjorn Neergaard <bjorn.neergaard@docker.com>
---
 libcontainer/init_linux.go              |  4 ++--
 libcontainer/system/syscall_linux_32.go | 27 -------------------------
 libcontainer/system/syscall_linux_64.go | 27 -------------------------
 3 files changed, 2 insertions(+), 56 deletions(-)
 delete mode 100644 libcontainer/system/syscall_linux_32.go
 delete mode 100644 libcontainer/system/syscall_linux_64.go

diff --git a/libcontainer/init_linux.go b/libcontainer/init_linux.go
index 0abbccf569f..d76166aafef 100644
--- a/libcontainer/init_linux.go
+++ b/libcontainer/init_linux.go
@@ -525,10 +525,10 @@ func setupUser(config *initConfig) error {
 		}
 	}
 
-	if err := system.Setgid(execUser.Gid); err != nil {
+	if err := unix.Setgid(execUser.Gid); err != nil {
 		return err
 	}
-	if err := system.Setuid(execUser.Uid); err != nil {
+	if err := unix.Setuid(execUser.Uid); err != nil {
 		return err
 	}
 
diff --git a/libcontainer/system/syscall_linux_32.go b/libcontainer/system/syscall_linux_32.go
deleted file mode 100644
index 1acc5cb03d0..00000000000
--- a/libcontainer/system/syscall_linux_32.go
+++ /dev/null
@@ -1,27 +0,0 @@
-//go:build linux && (386 || arm)
-// +build linux
-// +build 386 arm
-
-package system
-
-import (
-	"golang.org/x/sys/unix"
-)
-
-// Setuid sets the uid of the calling thread to the specified uid.
-func Setuid(uid int) (err error) {
-	_, _, e1 := unix.RawSyscall(unix.SYS_SETUID32, uintptr(uid), 0, 0)
-	if e1 != 0 {
-		err = e1
-	}
-	return
-}
-
-// Setgid sets the gid of the calling thread to the specified gid.
-func Setgid(gid int) (err error) {
-	_, _, e1 := unix.RawSyscall(unix.SYS_SETGID32, uintptr(gid), 0, 0)
-	if e1 != 0 {
-		err = e1
-	}
-	return
-}
diff --git a/libcontainer/system/syscall_linux_64.go b/libcontainer/system/syscall_linux_64.go
deleted file mode 100644
index 1ed0dba1709..00000000000
--- a/libcontainer/system/syscall_linux_64.go
+++ /dev/null
@@ -1,27 +0,0 @@
-//go:build linux && (arm64 || amd64 || mips || mipsle || mips64 || mips64le || ppc || ppc64 || ppc64le || riscv64 || s390x)
-// +build linux
-// +build arm64 amd64 mips mipsle mips64 mips64le ppc ppc64 ppc64le riscv64 s390x
-
-package system
-
-import (
-	"golang.org/x/sys/unix"
-)
-
-// Setuid sets the uid of the calling thread to the specified uid.
-func Setuid(uid int) (err error) {
-	_, _, e1 := unix.RawSyscall(unix.SYS_SETUID, uintptr(uid), 0, 0)
-	if e1 != 0 {
-		err = e1
-	}
-	return
-}
-
-// Setgid sets the gid of the calling thread to the specified gid.
-func Setgid(gid int) (err error) {
-	_, _, e1 := unix.RawSyscall(unix.SYS_SETGID, uintptr(gid), 0, 0)
-	if e1 != 0 {
-		err = e1
-	}
-	return
-}
